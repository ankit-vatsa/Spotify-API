@page
@* @page directive tells ASP.NET Core that file is a Razor Page.
	   This file will be processed as an endpoint. It allows the page to respond to HTTP requests.
	*@
@model IndexModel
@* 
	This binds the Razor Page to the IndexModel class, 
	which contains the logic for handling HTTP requests. 
	IndexModel is responsible for fetching data, handling form submissions, and more.
	*@

@{
	ViewData["Title"] = "Home page";
}
@* 
To set title of the page.
*@

<!--Comment-->
<div class="text-center"> <!--Bootstrap class to center content horizontally-->
	<h1 class="display-4">ToDo List</h1><!--display-4 is a Bootstrap class-->
	<form method="post" asp-page-handler="Add"> <!--asp-page-handler="App" binds with OnPostAddAsync method in Index.cshtml.cs-->
		<div class="input-group mb-3"> <!--groups input field and button together; mb-3 adds margin to form fields-->
			<input type="text" class="form-control" name="title" placeholder="Enter a task" />
			<div class="input-group-append"><!--Bootstrap class wrap submit button to align with input field-->
				<button type="submit" class="btn btn-primary">Add</button>  <!--btn btn-primary styles the button-->
			</div>
		</div>
		</form>


	@*       The asp-route-id does not work inside <a href="#">. You should use a <form> with a button. *@

		<ul class="list-group">
		<!--Razor loop iterates over list of "Todos" passed from "OnGetAsync" method through IndexModel-->
		@foreach (var todo in Model.Todos)
		{
					<li class="list-group-item d-flex justify-content-between align-items-center">
							<span>@todo.Title</span>  
							<!--This span tag displays the title of the task (todo.Title) dynamically. -->
							<!--The 'at the rate' symbol is used to insert the value of the todo.Title property from the Todo model.-->
						<div>
							<!-- Toggle Button -->
							<form method="post" asp-page-handler="Toggle">
								<input type="hidden" name="id" value="@todo.Id" />
								<button type="submit" class="btn btn-sm @(todo.IsCompleted ? "btn-success" : "btn-secondary")">
							@(todo.IsCompleted ? "Completed" : "Pending")
								</button>
							</form>

							<!-- Delete Button -->
							<form method="post" asp-page-handler="Delete" class="d-inline">
								<input type="hidden" name="id" value="@todo.Id" />
								<button type="submit" class="btn btn-danger btn-sm">Delete</button>
							</form>
						</div>
					</li>
		}
		</ul>
</div>
